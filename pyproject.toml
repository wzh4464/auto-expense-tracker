[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[project]
name = "auto-expense-tracker"
version = "0.1.0"
description = "Automated expense tracking from photos and PDFs to MOZE"
authors = [{ name = "Zihan Ng", email = "wzh4464@gmail.com" }]
license = "MIT"
readme = "README.md"
requires-python = ">=3.9,<3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "pydantic>=2.11.5",
    "pillow>=11.2.1",
    "opencv-python>=4.11.0.86",
    "pdfplumber>=0.11.6",
    "pypdf2>=3.0.1",
    "openai>=1.84.0",
    "anthropic>=0.52.2",
    "requests>=2.32.3",
    "pip-audit>=2.9.0",
    "pre-commit>=4.2.0",
    "pydocstyle>=6.3.0",
]

[dependency-groups]
dev = [
    "bandit>=1.8.3",
    "black>=25.1.0",
    "mypy>=1.16.0",
    "pre-commit>=4.2.0",
    "pylint>=3.3.7",
    "pytest>=8.4.0",
    "pytest-cov>=6.1.1",
    "types-requests>=2.32.0.20250602",
]

[tool.uv]
dev-dependencies = [
    "pytest>=8.4.0",
    "pytest-cov>=6.1.1",
    "black>=25.1.0",
    "pylint>=3.3.7",
    "mypy>=1.16.0",
    "pre-commit>=4.2.0",
    "bandit>=1.8.3",
    "types-requests>=2.32.0.20250602",
]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pylint.messages_control]
disable = ["missing-docstring", "too-few-public-methods", "import-error"]

[tool.pylint.format]
max-line-length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
]

[tool.coverage.run]
omit = ["src/__init__.py", "src/*//__init__.py", "tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]
fail_under = 80

[tool.bandit]
exclude_dirs = ["tests", "docs"]
